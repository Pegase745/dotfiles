# local user config
[include]
    path = ~/.gitconfig-github

[alias]
    a           = add -p
    amend       = commit -a --amend
    autosquash  = rebase -i --autosquash
    # Get default branch name dynamically
    default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'"
    # Clean merged branches relative to default branch
    bclean      = "!f() { DEFAULT=$(git default-branch); git branch --merged ${1-$DEFAULT} | grep -v \" ${1-$DEFAULT}$\" | xargs -r git branch -d; }; f"
    # Clean even those that were tracking a remote but remote is gone, and those that have no tracking at all
    bcleanall   = "!f() { DEFAULT=$(git default-branch); git fetch --prune; git branch -vv | grep -E ': gone]|^[^[]*$' | awk '{print $1}' | xargs -r git branch -D; }; f"
    # Switch to default branch, update, and clean
    bdone       = "!f() { DEFAULT=$(git default-branch); git checkout ${1-$DEFAULT} && git up && git bclean ${1-$DEFAULT}; }; f"
    br          = branch -vv
    cm          = !git add -A && git commit -s
    co          = checkout
    cob         = checkout -b
    conflict    = !gitk --left-right HEAD...MERGE_HEAD
    contains    = branch --contains
    cp          = cherry-pick -x
    di          = diff --color-words
    discard     = checkout --
    ec          = config --global -e
    fx          = commit --fixup
    lasttagcm   = log `git describe --tags --abbrev=0`..HEAD --pretty=oneline
    local       = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
    lg          = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s   %Cgreen(%an %ar)%Creset'
    lgfull      = log --pretty=fuller --graph --stat -p
    lgline      = "!f() { git log --pretty=short -L $1,$1:$2; }; f"
    # Switch to default branch
    m           = "!git checkout $(git default-branch)"
    # Count commits ahead of default branch
    nbcommits   = "!f() { DEFAULT=$(git default-branch); git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative $DEFAULT..$1; }; f"
    notmerged   = branch -a --no-merged
    pr          = pull --rebase
    # Rebase on default branch
    rb          = "!git rebase origin/$(git default-branch)"
    rba         = rebase --abort
    rbc         = rebase --continue
    rbs         = rebase --skip
    save        = !git add -A && git commit -m 'SAVEPOINT'
    s           = !git save
    sn          = !git save -n
    st          = status
    squash      = rebase -i @{u}
    tag-version = describe origin/stable --tags --abbrev=0
    undo        = reset HEAD~1 --mixed
    u           = !git undo
    undomerge   = reset --hard ORIG_HEAD
    unstage     = reset HEAD
    up          = !git pull --rebase --prune $@ && git submodule update --init --recursive
    # Rebase on upstream default branch
    upstream    = "!f() { git fetch upstream && git rebase upstream/$(git default-branch); }; f"
    whatrelease = name-rev --name-only
    who         = shortlog -s --
    wipe        = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

[color]
    branch      = auto
    diff        = auto
    interactive = auto
    status      = auto
    ui          = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta
  plain = white bold
  old = red bold
  new = green bold
  commit = yellow bold
  func = green dim

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[diff]
    mnemonicPrefix = true
    renames        = true
    wordRegex      = [^,:.[:space:]$%'-]+[,:.[:space:]$%'-]?

[log]
    abbrevCommit = true

[merge]
    conflictStyle = diff3
    log           = true

[push]
    default         = simple
    autoSetupRemote = true

[status]
    showUntrackedFiles = all

[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[init]
	defaultBranch = master
[user]
	name = Michel Nemnom
	email = 1678801+Pegase745@users.noreply.github.com
